{
    "__type__": "Deck",
    "children": [],
    "crowdanki_uuid": "4505a1c6-f400-11ed-afc9-4d7ac4064051",
    "deck_config_uuid": "4505a932-f400-11ed-afc9-4d7ac4064051",
    "deck_configurations": [
        {
            "__type__": "DeckConfig",
            "autoplay": true,
            "buryInterdayLearning": false,
            "crowdanki_uuid": "4505a932-f400-11ed-afc9-4d7ac4064051",
            "dyn": false,
            "interdayLearningMix": 0,
            "lapse": {
                "delays": [
                    10.0
                ],
                "leechAction": 1,
                "leechFails": 8,
                "minInt": 1,
                "mult": 0.0
            },
            "maxTaken": 60,
            "name": "Default",
            "new": {
                "bury": false,
                "delays": [
                    1.0,
                    10.0
                ],
                "initialFactor": 2500,
                "ints": [
                    1,
                    4,
                    0
                ],
                "order": 1,
                "perDay": 40
            },
            "newGatherPriority": 0,
            "newMix": 0,
            "newPerDayMinimum": 0,
            "newSortOrder": 0,
            "replayq": true,
            "rev": {
                "bury": false,
                "ease4": 1.3,
                "hardFactor": 1.2,
                "ivlFct": 1.0,
                "maxIvl": 36500,
                "perDay": 400
            },
            "reviewOrder": 0,
            "timer": 0
        }
    ],
    "desc": "",
    "dyn": 0,
    "extendNew": 0,
    "extendRev": 0,
    "media_files": [],
    "name": "ith_anki_cards",
    "newLimit": null,
    "newLimitToday": null,
    "note_models": [
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "css": ".card {\n  font-family: arial;\n  font-size: 20px;\n  text-align: center;\n  color: black;\n  background-color: white;\n}\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Liberation Sans",
                    "name": "Front",
                    "ord": 0,
                    "plainText": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Liberation Sans",
                    "name": "Back",
                    "ord": 1,
                    "plainText": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": true,
            "name": "Basic",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tags": [],
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Card 1",
                    "ord": 0,
                    "qfmt": "{{Front}}"
                }
            ],
            "type": 0
        }
    ],
    "notes": [
        {
            "__type__": "Note",
            "fields": [
                "Was ist ein Alphabet?&nbsp;",
                "Ein&nbsp;<b>Alphabet&nbsp;</b>ist eine nichtleere endliche Menge&nbsp;\\(\\Sigma\\). Das Alphabet&nbsp;\\(\\Sigma\\)&nbsp;wird&nbsp;\\(|\\Sigma|-är\\)&nbsp;bezeichnet. Die Elemente con&nbsp;\\(\\Sigma\\)&nbsp;heißen Buchstaben oder Symbole.&nbsp;"
            ],
            "guid": "wT>=7]7NCc",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist ein&nbsp;<b>Wort</b>?",
                "Ein&nbsp;<b>Wort&nbsp;</b>über einem Alphabet&nbsp;\\(\\Sigma\\)&nbsp;ist eine endliche Folge von Symbolen aus&nbsp;\\(\\Sigma\\). Die Länge eines Wortes&nbsp;\\(w\\)&nbsp;ist&nbsp;\\(|w|\\). Für&nbsp;\\(i \\in [|w|]\\)&nbsp;bezeichnet&nbsp;\\(w(i)\\)&nbsp;das i-te Element von&nbsp;\\(w\\)&nbsp;und für Symbole&nbsp;\\(a_1, ..., a_n \\in \\Sigma\\)&nbsp;bezeichnet&nbsp;\\(a_1, a_2, ..., a_n\\)&nbsp;das Wort&nbsp;\\(w\\)&nbsp;der Länge n mit&nbsp;\\(w(i) = a_i \\quad \\forall i \\in [n]\\)"
            ],
            "guid": "upQl?t4iT9",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Wie heißt das Wort der Länge 0?",
                "Das Wort der Länge 0 heißt leeres Wort und wird mit&nbsp;\\(\\lambda\\)&nbsp;bezeichnet. Ein Wort&nbsp;\\(w\\)&nbsp;der Länge 1 wird mit dem Symbol&nbsp;\\(w(1)\\)&nbsp;identifiziert.&nbsp;"
            ],
            "guid": "v<*;v*(-l_",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine Sprache?",
                "Eine&nbsp;<b>Sprache&nbsp;</b>ist eine Menge von Wörtern über einem gemeinsamen Alphabet&nbsp;\\(\\Sigma\\).&nbsp;"
            ],
            "guid": "p:e2JP$C[h",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist&nbsp;\\(\\Sigma^*\\)?",
                "Die Menge aller Wörter über&nbsp;\\(\\Sigma \\)&nbsp;wird mit&nbsp;\\(\\Sigma^* \\)&nbsp;bezeichnet.&nbsp;"
            ],
            "guid": "H++Tkc:m/v",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Wann heißt ein Wort&nbsp;\\(u\\)&nbsp;Präfix von&nbsp;\\(v\\)&nbsp;kurz&nbsp;\\(u \\sqsubseteq v\\)?",
                "Falls es ein Wort&nbsp;\\(w\\)&nbsp;gibt, sodass&nbsp;\\(uw = v\\)"
            ],
            "guid": "F#Y5_gx8J5",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Wann heißt ein Wort&nbsp;\\(u\\)&nbsp;infix von&nbsp;\\(v\\)?",
                "Falls es Wörter&nbsp;\\(w_1, w_2\\)&nbsp;gibt, sodass&nbsp;\\(v=w_1\\,u\\,w_2\\)"
            ],
            "guid": "fT+>KU15N:",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Wann heißt ein Wort&nbsp;\\(u\\)&nbsp;Suffix von&nbsp;\\(v\\)?",
                "Falls es ein Wort&nbsp;\\(w\\)&nbsp;gibt, sodass&nbsp;\\(v = wu\\)."
            ],
            "guid": "w?.,[N2X.@",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Wann heißt eine Sprache Pfäfixfrei?",
                "&nbsp;Eine Sprache heißt präfixfrei, wenn&nbsp;\\(u \\sqsubseteq v \\implies u = v \\qquad \\forall u,v \\in L\\).&nbsp;&nbsp;"
            ],
            "guid": "yNO!X?!>Z&",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Wann ist ein Sprachenhomomorphismus?",
                "Für Sprachen&nbsp;\\(L\\)&nbsp;und&nbsp;\\(M\\)&nbsp;heißt eine Funktion&nbsp;\\(\\varphi: L\\to M\\)&nbsp;Homomorphismus von Sprachen, wenn&nbsp;\\(\\varphi(uv) = \\varphi(u) \\varphi(v) \\quad \\forall u,v \\in L\\)&nbsp;gilt.&nbsp;"
            ],
            "guid": "mh-iL64;_c",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "&nbsp;Was ist eine Turingmaschine?",
                "Sei&nbsp;\\(k \\in \\mathbb N\\). Eine k-Band-Turingmaschine, kurz k-TM, ist ein Tupel&nbsp;\\[M = (Q,\\Sigma, \\Gamma, A, s, F)\\]Dabei ist<br><ul><li>\\(Q\\)&nbsp;eine endliche Menge,&nbsp;<b>Zustandsmenge</b>.</li><li>\\(\\Sigma\\)&nbsp;das&nbsp;<b>Eingabealphabet</b>, ein Alphabet mit&nbsp;\\(\\square \\not\\in \\Sigma\\).&nbsp;<br></li><li>\\(\\Gamma\\)&nbsp;das&nbsp;<b>Bandalphabet</b>, ein Alphabet mit&nbsp;\\(\\Sigma \\subseteq \\Gamma\\)&nbsp;und&nbsp;\\(\\square \\in \\Gamma \\setminus \\Sigma\\)<br></li><li>\\(\\Delta \\subseteq (Q \\times \\Gamma^k) \\times (Q \\times \\Gamma^k \\times \\{L,S,R\\}^k)\\)&nbsp;die Übergangsrelation.&nbsp;</li><li>\\(s \\in Q\\)&nbsp;der Startzustand.&nbsp;<br></li><li>\\(F \\subseteq Q\\)&nbsp;die Menge der akzeptierten Zustände.<br></li></ul>"
            ],
            "guid": "g97-ij.BHJ",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist die Konfiguration einer Turing Maschine?&nbsp;",
                "Sei&nbsp;\\(M = (Q, \\Sigma, \\Gamma, \\Delta, s, F)\\)&nbsp;eine k-TM. Eine <b>Konfiguration</b> von M ist ein Tupel\\[C= (q, w_1, ..., w_k, p_1, ..., p_k) \\in Q \\times (p^*)^k \\times \\mathbb N ^k\\]mit&nbsp;\\(p_i \\in [|w_i|] \\quad \\forall i \\in [k]\\)"
            ],
            "guid": "qaRUqhMNBb",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine endliche partielle Rechnung?",
                "Sei&nbsp;\\(M = (Q, \\Sigma, \\Gamma, \\Delta, s , F)\\)&nbsp;eine k-TM.&nbsp;<br><br>Eine <span style=\"color: rgb(248, 228, 92);\">endliche partielle Rechnung</span><span style=\"color: rgb(0, 0, 255);\">&nbsp;</span>von M ist eine endliche Folge&nbsp;\\(C_1, ..., C_n\\)&nbsp;von Konfigurationen von M mit:&nbsp;\\[C_i \\mapsto_M C_{i+1} \\quad \\forall i \\in [n-1]\\]<br>"
            ],
            "guid": "A6-pF_^mC]",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine unendliche partielle Rechnung?&nbsp;",
                "Sei&nbsp;\\(M = (Q, \\Sigma, \\Gamma, \\Delta, s , F)\\)&nbsp;eine k-TM.&nbsp;<br><br>Eine&nbsp;<span style=\"color: rgb(248, 228, 92);\">unendliche partielle Rechnung</span><span style=\"color: rgb(0, 0, 255);\">&nbsp;</span>von M ist eine unendliche Folge&nbsp;\\(C_1,C_2, ...\\)&nbsp;von Konfigurationen von M mit:&nbsp;\\[C_i \\mapsto_M C_{i+1} \\quad \\forall i \\in \\mathbb N\\]<br>"
            ],
            "guid": "oC@m)mmc&}",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine Rechnung einer Turingmaschine zu einer Eingabe&nbsp;\\((w_1,..., w_n) \\in (\\Sigma^*)^n\\)&nbsp;mit&nbsp;\\(n \\in \\mathbb N\\)?&nbsp;",
                "Sei&nbsp;\\(M = (Q, \\Sigma, \\Gamma, \\Delta, s , F)\\)&nbsp;eine k-TM.&nbsp;<br><br>Eine&nbsp;<span style=\"color: rgb(248, 228, 92);\">Rechnung</span><span style=\"color: rgb(0, 0, 255);\">&nbsp;</span>von M zur Eingabe&nbsp;\\((w_1, ...., w_n)  \\in (\\Sigma ^*)^n\\)&nbsp;ist eine endliche partielle Rechnung:&nbsp;<br>\\[start_M(w_1, ..., w_n) = C_1, ..., C_m \\]bei der&nbsp;\\(C_m \\)&nbsp;eine Stoppkonfig. ist oder eine unendliche part. Rechnung\\[start_M(w_1, ..., w_n) = C_1, C_2, ...\\]"
            ],
            "guid": "zRX{?:@IF0",
            "note_model_uuid": "4505bd50-f400-11ed-afc9-4d7ac4064051",
            "tags": []
        }
    ],
    "reviewLimit": null,
    "reviewLimitToday": null
}